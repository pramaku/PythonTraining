    
def usage(prog):
    help = """Usage {} <rmc_ip> [--get all] [--get ov_ip_1,ov_ip_2..] [--delete ov_ip_1,ov_ip_2..] [--delete all] """.format(prog)
    print help
    exit(0)

def parseAndLoadArgs(args):
    prog = args[0]
    opt = "--get"
    list_of_ov_ip = ["all"]
    if len(args) == 2:
        rmc_ip = args[1]
    elif len(args) == 3:
        usage(prog)
    elif len(args) == 4:
        rmc_ip = args[1]
        opt = args[2]
        if opt == "--get":
            val = args[3]
            if val != "all":
                list_of_ov_ip = val.split(",")
        elif opt == "--delete":
            val = args[3]
            if val != "all":
                list_of_ov_ip = val.split(",")
            else:
                isssue_del_warning = True
        else:
            usage(prog)
    else:
        usage(prog)
    printUserInput(prog, rmc_ip, opt, ",".join(list_of_ov_ip))
    return [rmc_ip, opt, list_of_ov_ip]

def printUserInput(prog, rmc_ip, opt, opt_val):
    log(1, prog + ' ' + rmc_ip + ' ' + opt + ' ' + opt_val)

if __name__ == '__main__':
    ip_args = parseAndLoadArgs(sys.argv)
    rmc_host_ip = ip_args[0]
    opt = ip_args[1]
    opt_val = ip_args[2]
    try:
        log(1, 'Checking connection to RMC...' + rmc_host_ip)
        verify=cert_path
        test = requests.get('https://'+ rmc_host_ip, verify=verify)
        log(0, 'Connection to RMC OK.')
    except requests.exceptions.SSLError as err:
        log(0, 'SSL Error. ' + str(err))
        exit(2)
    sessionId = createSessionToken()
    log(1, 'Session token ' + sessionId)

    if sessionId:
        response = getEventSubHosts(sessionId)
        sub_len = len(response)
        print 'Total subscriptions : ' + str(sub_len) + (" (max limit)" if (sub_len == 6) else "")
        #print response
        ip_addr_list=[]
        if sub_len > 0:
            log(1, 'getting event subscriptions')
            executeEventSubUserCmd(sessionId, opt, opt_val, response)
        
    else:
        exit(2)
